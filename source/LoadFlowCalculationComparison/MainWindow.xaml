<Window x:Class="LoadFlowCalculationComparison.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LoadFlowCalculationComparison"
        xmlns:localSettings="clr-namespace:LoadFlowCalculationComparison.AlgorithmSettings"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        Title="Load Flow Calculation Methods - Comparison" Height="550" Width="1000">
    <Window.Resources>
        <ObjectDataProvider x:Key="DataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="localSettings:ProblemSelectionEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="90"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Grid.Row="0" Name="GeneralSettingsGrid">
                    <TextBlock Text="General Settings" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="problem selection" HorizontalAlignment="Left" Margin="10,35,0,0" VerticalAlignment="Top"/>
                    <ComboBox Name="ProblemSelectionComboBox" HorizontalAlignment="Right" Margin="0,29,0,0" VerticalAlignment="Top" SelectionChanged="ProblemSelectionChanged" Width="180" ItemsSource="{Binding Source={StaticResource DataFromEnum}}" SelectedItem="{Binding ProblemSelection}"/>
                    <TextBlock Text="number of executions" HorizontalAlignment="Left" Margin="10,58,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,51,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="NumberOfExecutions" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Name="NodePotentialGrid" Grid.Row="1">
                    <TextBlock Text="Node Potential" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Name="NodePotentialSingularityDetectionTextBlock" Text="singularity detection" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="SingularityDetection" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Name="CurrentIterationGrid" Grid.Row="2">
                    <TextBlock Text="Current Iteration" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="termination criteria" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TerminationCriteria" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Name="NewtonRaphsonGrid" Grid.Row="3">
                    <TextBlock Text="Newton Raphson" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Name="FastDecoupledLoadFlowGrid" Grid.Row="4">
                    <TextBlock Text="Fast Decoupled Load Flow" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="10,0,0,10" VerticalAlignment="Stretch" Name="HolomorphicEmbeddedLoadFlowGrid" Grid.Row="5">
                    <TextBlock Text="Holomorphic Embedding Load Flow" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumNumberOfCoefficients" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotNegativeValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.IsEnabled>
                            <Binding Path="ChangesAllowed" Mode="OneWay"/>
                        </TextBox.IsEnabled>
                    </TextBox>
                </Grid>
                <Button Name="CalculateButton" Content="calculate" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Top" Width="75" Click="CalculateClicked" IsEnabled="{Binding Path=ChangesAllowed, Mode=OneWay}"  Grid.Row="6"/>
            </Grid>
        </ScrollViewer>
        <DataGrid Name="ResultDataGrid" VerticalAlignment="Stretch" Grid.Column="1" Margin="10,10,10,10" HorizontalAlignment="Stretch" IsReadOnly="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Algorithm}" Header="algorithm"/>
                <DataGridCheckBoxColumn Binding="{Binding VoltageCollapse}" Header="real collapse"/>
                <DataGridCheckBoxColumn Binding="{Binding VoltageCollapseDetected}" Header="reported collapse"/>
                <DataGridTextColumn Binding="{Binding RelativePowerError, StringFormat={}{0:e3}}" Header="power error"/>
                <DataGridTextColumn Binding="{Binding MaximumRelativeVoltageError, StringFormat={}{0:e3}}" Header="voltage error"/>
                <DataGridTextColumn Binding="{Binding AverageExecutionTime, StringFormat={}{0:e3}}" Header="time"/>
                <DataGridTextColumn Binding="{Binding StandardDeviationExecutionTime, StringFormat={}{0:e3}}" Header="sigma t"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
