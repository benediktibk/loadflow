<Window x:Class="LoadFlowCalculationComparison.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LoadFlowCalculationComparison"
        xmlns:localSettings="clr-namespace:LoadFlowCalculationComparison.AlgorithmSettings"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        Title="Load Flow Calculation Methods - Comparison" Height="470" Width="1000">
    <Window.Resources>
        <ObjectDataProvider x:Key="DataFromEnum"
       MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="localSettings:ProblemSelectionEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid>
                    <TextBlock Text="problem selection" HorizontalAlignment="Left" Margin="10,14,0,0" VerticalAlignment="Top"/>
                    <ComboBox Name="ProblemSelectionComboBox" HorizontalAlignment="Right" Margin="120,14,10,0" VerticalAlignment="Top" SelectionChanged="ProblemSelectionChanged" Width="220" ItemsSource="{Binding Source={StaticResource DataFromEnum}}" SelectedItem="{Binding ProblemSelection}"/>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Height="54" Margin="15,41,15,0" VerticalAlignment="Top" Name="NodePotentialGrid">
                    <TextBlock Text="Node Potential" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Name="NodePotentialSingularityDetectionTextBlock" Text="singularity detection" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="SingularityDetection" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Height="73" Margin="15,95,15,0" VerticalAlignment="Top" Name="CurrentIterationGrid">
                    <TextBlock Text="Current Iteration" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="termination criteria" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TerminationCriteria" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Height="73" Margin="15,168,15,0" VerticalAlignment="Top" Name="NewtonRaphsonGrid">
                    <TextBlock Text="Newton Raphson" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Height="73" Margin="15,241,15,0" VerticalAlignment="Top" Name="FastDecoupledLoadFlowGrid">
                    <TextBlock Text="Fast Decoupled Load Flow" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumIterations" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Height="73" Margin="10,314,15,0" VerticalAlignment="Top" Name="HolomorphicEmbeddedLoadFlowGrid">
                    <TextBlock Text="Holomorphic Embedding Load Flow" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontStyle="Italic"/>
                    <TextBlock Text="target precision" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="TargetPrecision" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="maximum iterations" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Right" Height="23" Margin="0,49,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="100" TextAlignment="Right">
                        <TextBox.Text>
                            <Binding Path="MaximumNumberOfCoefficients" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PositiveValidationRule ValidationStep="ConvertedProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Button Name="CalculateButton" Content="calculate" HorizontalAlignment="Right" Margin="0,398,10,0" VerticalAlignment="Top" Width="75" Click="CalculateClicked" IsEnabled="{Binding Path=(Validation.Errors).NodePotentialGrid, Mode=OneWay}"/>
            </Grid>
        </ScrollViewer>
        <DataGrid ItemsSource="{Binding}" VerticalAlignment="Stretch" Grid.Column="1" Margin="10,10,10,10" HorizontalAlignment="Stretch"/>
    </Grid>
</Window>
