<Window x:Class="DatabaseUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:database="clr-namespace:Database;assembly=Database"
        xmlns:databaseUi="clr-namespace:DatabaseUI"
        Title="LoadFlow" Height="600" Width="1000">
    <Window.Resources>
        <database:Model x:Key="Database"/>
        <database:NodeToNodeNameConverter x:Key="NodeToNodeNameConverter"/>
        <databaseUi:NodeVoltageCalculatorSelectionToStringConverter x:Key="NodeVoltageCalculatorSelectionToStringConverter"/>
        <databaseUi:ConnectedToButtonLabelConverter x:Key="ConnectedToButtonLabelConverter"/>
    </Window.Resources>
    <Grid DataContext="{StaticResource Database}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="150"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition MinHeight="100" MaxHeight="200"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Label
                        Grid.Row="0" Grid.Column="0"
                        Content="server"/>
                    <TextBox 
                        Grid.Row="0" Grid.Column="1"
                        Text="{Binding Connection.Server}" Margin="2,2,2,2" 
                        Name="ServerTextBox" IsReadOnly="{Binding Connection.Connected}"/>
                    <Label
                        Grid.Row="1" Grid.Column="0"
                        Content="user"/>
                    <TextBox 
                        Grid.Row="1" Grid.Column="1"
                        Text="{Binding Connection.User}" Margin="2,2,2,2" 
                        Name="UserTextBox" IsReadOnly="{Binding Connection.Connected}"/>
                    <Label
                        Grid.Row="2" Grid.Column="0"
                        Content="password"/>
                    <TextBox 
                        Grid.Row="2" Grid.Column="1"
                        Text="{Binding Connection.Password}" Margin="2,2,2,2" 
                        Name="PasswordTextBox" IsReadOnly="{Binding Connection.Connected}"/>
                    <Label
                        Grid.Row="3" Grid.Column="0"
                        Content="database"/>
                    <TextBox 
                        Grid.Row="3" Grid.Column="1"
                        Text="{Binding Connection.Database}" Margin="2,2,2,2" 
                        Name="DatabaseTextBox" IsReadOnly="{Binding Connection.Connected}"/>
                    <Button 
                        Grid.Row="4" Grid.Column="1" 
                        Content="{Binding Connection.Connected, Converter={StaticResource ConnectedToButtonLabelConverter}, UpdateSourceTrigger=PropertyChanged}"
                        Margin="2,2,2,2" Click="ToggleConnect"
                        IsEnabled="{Binding SelectedPowerNet.IsCalculationNotRunning}"/>
                </Grid>
                <DataGrid 
                    Grid.Row="1" 
                    ItemsSource="{Binding PowerNets, Mode=TwoWay}" 
                    AutoGenerateColumns="False" 
                    Width="396" 
                    Margin="2,2,2,2" 
                    Name="PowerNetsDataGrid" 
                    SelectionMode="Single" 
                    SelectedItem="{Binding SelectedPowerNet, Mode=TwoWay}"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Frequency}" Header="frequency"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource NodeVoltageCalculatorSelectionToStringConverter}, Path=AllPossibleStrings}" 
                            SelectedItemBinding="{Binding CalculatorSelection, Converter={StaticResource NodeVoltageCalculatorSelectionToStringConverter}, UpdateSourceTrigger=PropertyChanged}"
                            Header="node voltage calculator"/>
                        <DataGridTextColumn Binding="{Binding Nodes.Count, Mode=OneWay}" Header="nodes"/>
                        <DataGridTextColumn Binding="{Binding NetElementCount, Mode=OneWay}" Header="net elements"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Button 
                        Grid.Row="2"
                        Name="CalculateButton" Content="calculate node voltages" 
                        Margin="2,2,2,2" Click="CalculateNodeVoltages" 
                        IsEnabled="{Binding SelectedPowerNet.IsCalculationNotRunning}"/>
                <TextBox 
                    Grid.Row="3" Name="LoggingOutput" Margin="2,2,2,2" IsReadOnly="True" Width="396" 
                    HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                    Text="{Binding SelectedPowerNet.LogMessages, Mode=OneWay}"/>
            </Grid>
        </ScrollViewer>
        <TabControl Grid.Column="1">
            <TabItem Header="Nodes">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.Nodes, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="NodesDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id}" IsReadOnly="True" Header="ID"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding NominalVoltage}" Header="nominal voltage"/>
                        <DataGridTextColumn Binding="{Binding VoltageReal, StringFormat=N2}" IsReadOnly="True" Header="voltage, real"/>
                        <DataGridTextColumn Binding="{Binding VoltageImaginary, StringFormat=N2}" IsReadOnly="True" Header="voltage, imaginary"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Lines">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.Lines, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="LinesDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding NodeOne, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="first node"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding NodeTwo, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="second node"/>
                        <DataGridTextColumn Binding="{Binding SeriesResistancePerUnitLength, StringFormat=N3}" Header="series resistance per unit length"/>
                        <DataGridTextColumn Binding="{Binding SeriesInductancePerUnitLength, StringFormat=N3}" Header="series inductance per unit length"/>
                        <DataGridTextColumn Binding="{Binding ShuntConductancePerUnitLength, StringFormat=N3}" Header="shunt conductance per unit length"/>
                        <DataGridTextColumn Binding="{Binding ShuntCapacityPerUnitLength, StringFormat=N3}" Header="shunt capacity per unit length"/>
                        <DataGridTextColumn Binding="{Binding Length, StringFormat=N3}" Header="length"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Loads">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.Loads, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="LoadsDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding Node, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="node"/>
                        <DataGridTextColumn Binding="{Binding Real, StringFormat=N1}" Header="load, real"/>
                        <DataGridTextColumn Binding="{Binding Imaginary, StringFormat=N1}" Header="load, imaginary"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Generators">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.Generators, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="GeneratorsDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding Node, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="node"/>
                        <DataGridTextColumn Binding="{Binding VoltageMagnitude, StringFormat=N1}" Header="voltage magnitude"/>
                        <DataGridTextColumn Binding="{Binding RealPower, StringFormat=N1}" Header="real power"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Feed-ins">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.FeedIns, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="FeedInsDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding Node, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="node"/>
                        <DataGridTextColumn Binding="{Binding VoltageReal, StringFormat=N1}" Header="voltage, real"/>
                        <DataGridTextColumn Binding="{Binding VoltageImaginary, StringFormat=N1}" Header="voltage, imaginary"/>
                        <DataGridTextColumn Binding="{Binding ShortCircuitPower, StringFormat=N1}" Header="short circuit power"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Transformers">
                <DataGrid 
                    AutoGenerateColumns="False" 
                    ItemsSource="{Binding SelectedPowerNet.Transformers, Mode=TwoWay}" 
                    Margin="2,2,2,2" 
                    Name="TransformersDataGrid"
                    IsReadOnly="{Binding SelectedPowerNet.IsCalculationRunning}"
                    IsEnabled="{Binding Connection.Connected}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding UpperSideNode, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="upper side node"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding LowerSideNode, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="lower side node"/>
                        <DataGridTextColumn Binding="{Binding NominalPower, StringFormat=N1}" Header="nominal power"/>
                        <DataGridTextColumn Binding="{Binding RelativeShortCircuitVoltage, StringFormat=N4}" Header="relative short circuit voltage"/>
                        <DataGridTextColumn Binding="{Binding CopperLosses, StringFormat=N1}" Header="copper losses"/>
                        <DataGridTextColumn Binding="{Binding IronLosses, StringFormat=N1}" Header="iron losses"/>
                        <DataGridTextColumn Binding="{Binding RelativeNoLoadCurrent, StringFormat=N4}" Header="relative no load current"/>
                        <DataGridTextColumn Binding="{Binding Ratio, StringFormat=N2}" Header="ratio"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
