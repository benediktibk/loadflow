<Window x:Class="DatabaseUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:database="clr-namespace:Database;assembly=Database"
        Title="LoadFlow" Height="600" Width="800">
    <Window.Resources>
        <database:Model x:Key="Database"/>
        <database:NodeToNodeNameConverter x:Key="NodeToNodeNameConverter"/>
    </Window.Resources>
    <Grid DataContext="{StaticResource Database}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition MinHeight="100" MaxHeight="200"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" Text="database connection string" Margin="2,2,2,2"/>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="connect" Name="ConnectButton" Margin="2,2,2,2" Click="Connect"/>
                    <Button Grid.Column="1" Name="CalculateButton" Content="calculate node voltages" Margin="2,2,2,2" Click="CalculateNodeVoltages"/>
                </Grid>
                <DataGrid Grid.Row="2" ItemsSource="{Binding PowerNets, Mode=TwoWay}" AutoGenerateColumns="False" Width="396" Margin="2,2,2,2" Name="PowerNetsDataGrid" SelectionMode="Single" SelectedItem="{Binding SelectedPowerNet, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Frequency, StringFormat={}{0:0}}" Header="frequency"/>
                        <DataGridTextColumn Binding="{Binding Nodes.Count, StringFormat={}{0:0}}" Header="nodes"/>
                        <DataGridTextColumn Binding="{Binding NetElementCount, StringFormat={}{0:0}}" Header="net elements"/>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBox Grid.Row="3" Name="LoggingOutput" Margin="2,2,2,2" IsReadOnly="True"/>
            </Grid>
        </ScrollViewer>
        <TabControl Grid.Column="1">
            <TabItem Header="Nodes">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.Nodes, Mode=TwoWay}" Margin="2,2,2,2" Name="NodesDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding NominalVoltage, StringFormat={}{0:0}}" Header="nominal voltage"/>
                        <DataGridTextColumn Binding="{Binding VoltageReal, StringFormat={}{0:0}}" IsReadOnly="True" Header="voltage, real"/>
                        <DataGridTextColumn Binding="{Binding VoltageImaginary, StringFormat={}{0:0}}" IsReadOnly="True" Header="voltage, imaginary"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Lines">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.Lines, Mode=TwoWay}" Margin="2,2,2,2" Name="LinesDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding NodeOne, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="first node"/>
                        <DataGridComboBoxColumn 
                            ItemsSource="{Binding Source={StaticResource Database}, Path=SelectedPowerNet.NodeNames}" 
                            SelectedItemBinding="{Binding NodeTwo, Converter={StaticResource NodeToNodeNameConverter}, ConverterParameter=Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="second node"/>
                        <DataGridTextColumn Binding="{Binding SeriesResistancePerUnitLength, StringFormat={}{0:0}}" Header="series resistance per unit length"/>
                        <DataGridTextColumn Binding="{Binding SeriesInductancePerUnitLength, StringFormat={}{0:0}}" Header="series inductance per unit length"/>
                        <DataGridTextColumn Binding="{Binding ShuntConductancePerUnitLength, StringFormat={}{0:0}}" Header="shunt conductance per unit length"/>
                        <DataGridTextColumn Binding="{Binding ShuntCapacityPerUnitLength, StringFormat={}{0:0}}" Header="shunt capacity per unit length"/>
                        <DataGridTextColumn Binding="{Binding Length, StringFormat={}{0:0}}" Header="length"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Loads">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.Loads, Mode=TwoWay}" Margin="2,2,2,2" Name="LoadsDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding Real, StringFormat={}{0:0}}" Header="load, real"/>
                        <DataGridTextColumn Binding="{Binding Imaginary, StringFormat={}{0:0}}" Header="load, imaginary"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Generators">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.Generators, Mode=TwoWay}" Margin="2,2,2,2" Name="GeneratorsDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding VoltageMagnitude, StringFormat={}{0:0}}" Header="voltage magnitude"/>
                        <DataGridTextColumn Binding="{Binding RealPower, StringFormat={}{0:0}}" Header="real power"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Feed-ins">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.FeedIns, Mode=TwoWay}" Margin="2,2,2,2" Name="FeedInsDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding VoltageReal, StringFormat={}{0:0}}" Header="voltage, real"/>
                        <DataGridTextColumn Binding="{Binding VoltageImaginary, StringFormat={}{0:0}}" Header="voltage, imaginary"/>
                        <DataGridTextColumn Binding="{Binding ShortCircuitPower, StringFormat={}{0:0}}" Header="short circuit power"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Transformers">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding SelectedPowerNet.Transformers, Mode=TwoWay}" Margin="2,2,2,2" Name="TransformersDataGrid">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="name"/>
                        <DataGridTextColumn Binding="{Binding NominalPower, StringFormat={}{0:0}}" Header="nominal power"/>
                        <DataGridTextColumn Binding="{Binding RelativeShortCircuitVoltage, StringFormat={}{0:0}}" Header="relative short circuit voltage"/>
                        <DataGridTextColumn Binding="{Binding CopperLosses, StringFormat={}{0:0}}" Header="copper losses"/>
                        <DataGridTextColumn Binding="{Binding IronLosses, StringFormat={}{0:0}}" Header="iron losses"/>
                        <DataGridTextColumn Binding="{Binding RelativeNoLoadCurrent, StringFormat={}{0:0}}" Header="relative no load current"/>
                        <DataGridTextColumn Binding="{Binding Ratio, StringFormat={}{0:0}}" Header="ratio"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
